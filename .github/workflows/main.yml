name: Test

on:
  workflow_dispatch: # trigger manually

# globals
env:
  # knora-api
  KNORA_API_REPO: dasch-swiss/knora-api
  KNORA_API_BRANCH: main
  KNORA_API_DIR: knora-api
  
  
jobs:
  build:
    runs-on: macOS-10.15

    steps:
      - name: Prerequisites   # cf. https://docs.knora.org/04-publishing-deployment/getting-started/
        run: echo "Installing prerequisites"
     
      - name: Check and update homebrew 
        if: always()
        run: | 
          if [[ -z "$(brew --version)" ]] ; then
            # install brew
          fi
          brew --version
          brew update
     
      - name: Check git
        if: always()
        run: |
          if [[ -z "$(git --version)" ]] ; then
            brew install git
          fi
          git --version

      - name: Check and update Bazelisk
        if: always()
        run: |         
          if [[ $(brew leaves | grep bazelisk) ]]; then
            echo "Updating bazelisk"
            brew upgrade bazelisk
          else
            echo "Installing bazelisk"
            brew install bazelisk
          fi
          bazelisk version
  
      - name: Switch to JAVA 11 (AdoptOpenJDK)
        if: always()
        run: |
          # brew tap AdoptOpenJDK/openjdk
          # brew cask install AdoptOpenJDK/openjdk/adoptopenjdk11
          export JAVA_HOME=`/usr/libexec/java_home -v 11`
          java -version
      
      - name: Install expect
        if: always()
        run: brew install expect
        
      - name: Install sbt
        if: always()
        run: brew install sbt
      
      - name: Install and set up Docker
        if: always()
        run: |
          # see https://github.com/actions/virtual-environments/issues/1143#issuecomment-652264388
          # see https://github.com/play-with-go/play-with-go/blob/main/_scripts/macCISetup.sh
          
          # Install Docker
          brew cask install docker

          # Allow the app to run without confirmation
          xattr -d -r com.apple.quarantine /Applications/Docker.app

          # preemptively do docker.app's setup to avoid any gui prompts
          sudo /bin/cp /Applications/Docker.app/Contents/Library/LaunchServices/com.docker.vmnetd /Library/PrivilegedHelperTools
          sudo /bin/cp /Applications/Docker.app/Contents/Resources/com.docker.vmnetd.plist /Library/LaunchDaemons/
          sudo /bin/chmod 544 /Library/PrivilegedHelperTools/com.docker.vmnetd
          sudo /bin/chmod 644 /Library/LaunchDaemons/com.docker.vmnetd.plist
          sudo /bin/launchctl load /Library/LaunchDaemons/com.docker.vmnetd.plist

          # Run
          [[ $(uname) == 'Darwin' ]] || { echo "This function only runs on macOS." >&2; exit 2; }
          echo "-- Starting Docker.app, if necessary..."
          open -g -a /Applications/Docker.app || exit

          # Wait for the server to start up, if applicable.
          i=0
          while ! docker system info &>/dev/null; do
            (( i++ == 0 )) && printf %s '-- Waiting for Docker to finish starting up...' || printf '.'
            sleep 1
          done
          (( i )) && printf '\n'

          echo "-- Docker is ready."
          docker version
      
      - name: Clean up homebrew 
        if: always()
        run: brew cleanup -s  
    
      - name: Checkout KNORA_API_REPO into KNORA_API_DIR
        if: always()
        uses: actions/checkout@v2
        with:
          repository: ${{ env.KNORA_API_REPO }}
          ref: ${{ env.KNORA_API_BRANCH }}
          path: ${{ env.KNORA_API_DIR }}

      - name: Make init-db-test
        if: always()
        working-directory: ${{ env.KNORA_API_DIR }}
        run: make init-db-test
      
      - name: Make stack-up
        if: always()
        working-directory: ${{ env.KNORA_API_DIR }}
        run: make stack-up
